{"version":3,"sources":["components/dialogs/NewFridgeDialog.js","pages/FridgesDashboard.js","components/dialogs/NewUserDialog.js","components/dialogs/NewFridgeItemDialog.js","components/CarouselSlide.js","components/dialogs/CarouselDialog.js","pages/FridgeItemsDashboard.js","components/dialogs/NewFoodProductDialog.js","pages/FoodProducts.js","components/UnitSelector.js","components/FoodProductInput.js","components/AddNewRecipe.js","components/dialogs/RecipeDetails.js","pages/Recipes.js","components/Header.js","components/BottomMenu.js","components/AdminLogin.js","App.js","reportWebVitals.js","index.js"],"names":["NewFridgeDialog","isOpen","handleClose","useState","name","address","desc","values","setValues","handleInputChange","e","target","value","Fragment","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","label","fullWidth","onChange","DialogActions","Button","onClick","color","variant","startIcon","obj","fetch","configData","SERVER_URL","method","headers","body","JSON","stringify","then","response","ok","toast","error","position","autoClose","Error","statusText","success","catch","console","log","columns","field","sort","styles","topButton","paddingLeft","paddingTop","paddingBottom","marginTop","FridgesDashboard","state","React","useContext","AuthContext","dataLoading","finishLoading","dummyState","rerender","newFridgeDialogOpen","newFridgeDialog","buttons","to","delete","rows","setRows","useEffect","json","rowsArray","map","item","index","disabled","isAdmin","fridgeId","Authorization","token","handleDelete","finally","Container","fixed","style","CircularProgress","scrollY","maxHeight","paging","hover","entriesOptions","entries","pagesAmount","data","NewUserDialog","email","user","NewFridgeItemDialog","selectedUserId","foodProductId","foodProductName","foodProducts","setFoodProducts","setFoodProductId","note","unit","setUnit","items","Autocomplete","options","getOptionLabel","option","width","event","val","undefined","renderInput","params","test","ToggleButtonGroup","exclusive","aria-label","ToggleButton","Typography","userId","fridgeItem","parseInt","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","card","borderRadius","margin","boxShadow","display","justifyContent","CarouselSlide","props","recipe","content","List","component","fp","ListItem","ListItemIcon","fontSize","ListItemText","amountValue","Arrow","direction","clickFunction","icon","CarouselDialog","recipes","setIndex","recipeContent","numSlides","length","onArrowClick","Grid","container","xs","description","status","FridgeItemsDashboard","useParams","newUserDialogState","setNewUserDialogState","newFridgeItemDialogState","setNewFridgeItemDialogState","amount","useRef","usersLoading","finishUsersLoading","fridgeItemsLoading","finishFridgeItemsLoading","fridgeUsers","setUsersData","selectUser","carouselDialogState","setCarouselDialogState","recipesFound","setRecipesFound","selectedItems","selectItem","check","type","categoryName","productName","consume","min","max","endpoint","readOnly","arr","includes","splice","indexOf","push","checkHandler","curent","handleChange","handleConsume","fridgeItemId","current","className","NewFoodProductDialog","categories","categoryId","setCategory","category","sessionStorage","getItem","FoodProducts","newFoodProductDialog","setNewFoodProductDialog","setCategories","foodProductCategory","UnitSelector","handleChangeUnit","FoodProductInput","inputList","setInputList","handleAddClick","optional","i","list","handleRemoveClick","Checkbox","checked","actualState","handleCheckbox","placeholder","header","bottomButtonsGrp","bottomBtn","marginLeft","marginRight","minWidth","minHeight","toggleBtn","diffToggleBtnGrp","marginbottom","categoryToggleBtnGrp","marginBottom","backgroundColor","AddNewRecipe","history","useHistory","recipeName","setRecipeName","recipeDesc","setRecipeDesc","recipeCategory","setRecipeCategory","levelOfDifficulty","setDifficulty","requiredTime","setRequiredTime","xd","justify","alignItems","diff","cat","multiline","Box","size","products","newProduct","RecipeDetails","isDialogOpened","recipeDetails","foodProductsFormatted","setFoodProductsFormatted","foodProductsList","parse","ArrayOfFoodProductDetails","FoodProductDetails","oldArray","FoodProductId","FoodProductName","AmountValue","Value","Unit","Object","dividers","foodProduct","DialogContentText","recipeDescription","Recipes","recipeDetailsDialogOpened","openDetailsDialog","reqTime","difficulty","details","gradient","setRecipeDetails","Header","dispatch","actualPath","setActualPath","dark","expand","navbar","left","active","right","nav","caret","href","BottomMenu","Date","getFullYear","AdminLogin","login","setLogin","password","setPassword","maxWidth","tag","payload","createContext","initialState","loggedInUser","reducer","action","setItem","clear","App","useReducer","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12915daf.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport configData from \"../../config_url.json\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst NewFridgeDialog = ({ isOpen, handleClose }) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    address: \"\",\r\n    desc: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const refreshForm = () => {\r\n    setValues({\r\n      name: \"\",\r\n      address: \"\",\r\n      desc: \"\",\r\n    });\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    const obj = {\r\n      name: values.name,\r\n      address: values.address,\r\n      desc: values.desc,\r\n    };\r\n    fetch(configData.SERVER_URL + \"/api/fridges\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(obj),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          toast.error(\"Cant add fridge!\", {\r\n            position: \"bottom-center\",\r\n            autoClose: 1500,\r\n          });\r\n          throw Error(response.statusText);\r\n        }\r\n        toast.success(\"Added new fridge!\", {\r\n          position: \"bottom-center\",\r\n          autoClose: 1500,\r\n        });\r\n\r\n        return response;\r\n      })\r\n      .then(refreshForm())\r\n      .then(handleClose())\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ToastContainer />\r\n      <Dialog\r\n        open={isOpen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add new Fridge</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            name=\"name\"\r\n            label=\"Fridge name\"\r\n            fullWidth\r\n            onChange={handleInputChange}\r\n            value={values.name}\r\n          />\r\n          <TextField\r\n            name=\"address\"\r\n            label=\"Address\"\r\n            fullWidth\r\n            onChange={handleInputChange}\r\n            value={values.address}\r\n          />\r\n          <TextField\r\n            name=\"desc\"\r\n            label=\"Description\"\r\n            fullWidth\r\n            onChange={handleInputChange}\r\n            value={values.desc}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            startIcon={<CloseIcon />}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleAdd}\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            variant=\"outlined\"\r\n          >\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewFridgeDialog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport configData from \"../config_url.json\";\r\n\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { Container } from \"@material-ui/core\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nimport NewFridgeDialog from \"../components/dialogs/NewFridgeDialog\";\r\nimport { AuthContext } from \"../App\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst FridgesDashboard = () => {\r\n  const { state } = React.useContext(AuthContext);\r\n  const [dataLoading, finishLoading] = useState(true);\r\n  const [dummyState, rerender] = useState(1);\r\n  const [newFridgeDialogOpen, newFridgeDialog] = useState(false);\r\n\r\n  const [rows, setRows] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"fridge\",\r\n      address: \"\",\r\n      buttons: <Link to=\"/\" />,\r\n      delete: <Button></Button>,\r\n    },\r\n  ]);\r\n\r\n  const handleRefresh = () => {\r\n    rerender(dummyState + 1);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    newFridgeDialog(false);\r\n  };\r\n\r\n  const handleDelete = (fridgeId) => {\r\n    const obj = {\r\n      fridgeId: fridgeId,\r\n    };\r\n\r\n    if (state.isAdmin) {\r\n      fetch(configData.SERVER_URL + \"/api/fridges\", {\r\n        method: \"delete\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + state.token,\r\n        },\r\n        body: JSON.stringify(obj),\r\n      })\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            toast.error(\"Cant delete fridge!\", {\r\n              position: \"bottom-center\",\r\n              autoClose: 1500,\r\n            });\r\n            throw Error(response.statusText);\r\n          }\r\n          toast.success(\"Fridge deleted!\", {\r\n            position: \"bottom-center\",\r\n            autoClose: 1500,\r\n          });\r\n\r\n          return response;\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(configData.SERVER_URL + \"/api/fridges\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        const rowsArray = json.map((item, index) => ({\r\n          id: index + 1,\r\n          name: item.name,\r\n          address: item.address,\r\n          buttons: (\r\n            <Link to={`/fridgeitems/${item.id}`}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<MoreVertIcon />}\r\n              >\r\n                Details\r\n              </Button>\r\n            </Link>\r\n          ),\r\n          delete: (\r\n            <Button\r\n              disabled={!state.isAdmin}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              startIcon={<DeleteIcon />}\r\n              onClick={() => handleDelete(item.id)}\r\n            >\r\n              Remove\r\n            </Button>\r\n          ),\r\n        }));\r\n\r\n        setRows(rowsArray);\r\n      })\r\n      .catch((error) => console.error(error))\r\n      .finally(() => finishLoading(false));\r\n  }, [dummyState, state]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ToastContainer />\r\n      <NewFridgeDialog isOpen={newFridgeDialogOpen} handleClose={handleClose} />\r\n      <Container fixed>\r\n        <Button\r\n          style={styles.topButton}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            newFridgeDialog(true);\r\n          }}\r\n          startIcon={<AddIcon />}\r\n        >\r\n          Add new\r\n        </Button>\r\n        <Button\r\n          style={styles.topButton}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={handleRefresh}\r\n          startIcon={<RefreshIcon />}\r\n        >\r\n          Refresh\r\n        </Button>\r\n\r\n        {dataLoading ? (\r\n          <div>\r\n            <CircularProgress />\r\n            <p>Loading fridges</p>\r\n          </div>\r\n        ) : (\r\n          <MDBDataTable\r\n            scrollY\r\n            maxHeight=\"62vh\"\r\n            paging={true}\r\n            hover\r\n            entriesOptions={[5, 10, 20]}\r\n            entries={10}\r\n            pagesAmount={3}\r\n            data={{ columns: columns, rows: rows }}\r\n          ></MDBDataTable>\r\n        )}\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    label: \"#\",\r\n    field: \"id\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"Name\",\r\n    field: \"name\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"Address\",\r\n    field: \"address\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"\",\r\n    field: \"buttons\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"\",\r\n    field: \"delete\",\r\n    sort: \"asc\",\r\n  },\r\n];\r\n\r\nconst styles = {\r\n  topButton: {\r\n    paddingLeft: \"30px\",\r\n    paddingTop: \"10px\",\r\n    paddingBottom: \"10px\",\r\n    marginTop: \"30px\",\r\n  },\r\n};\r\n\r\nexport default FridgesDashboard;\r\n","import React, { useState } from \"react\";\r\nimport configData from \"../../config_url.json\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst NewUserDialog = ({ fridgeId, state, handleClose }) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const refreshForm = () => {\r\n    setValues({\r\n      name: \"\",\r\n      email: \"\",\r\n    });\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    const obj = {\r\n      user: { name: values.name, email: values.email },\r\n    };\r\n\r\n    fetch(configData.SERVER_URL + \"/api/fridgeUsers/\" + fridgeId, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(obj),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          toast.error(\"Cant add user!\", {\r\n            position: \"bottom-center\",\r\n            autoClose: 1500,\r\n          });\r\n          throw Error(response.statusText);\r\n        }\r\n        toast.success(\"Added new user!\", {\r\n          position: \"bottom-center\",\r\n          autoClose: 1500,\r\n        });\r\n\r\n        return response;\r\n      })\r\n      .then(refreshForm())\r\n      .then(() => handleClose())\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ToastContainer />\r\n      <Dialog\r\n        open={state}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add user</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            fullWidth\r\n            onChange={handleInputChange}\r\n            value={values.name}\r\n          />\r\n          <TextField\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            fullWidth\r\n            onChange={handleInputChange}\r\n            value={values.email}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            startIcon={<CloseIcon />}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            variant=\"outlined\"\r\n            onClick={handleAdd}\r\n          >\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewUserDialog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport configData from \"../../config_url.json\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst NewFridgeItemDialog = ({\r\n  fridgeId,\r\n  selectedUserId,\r\n  state,\r\n  handleClose,\r\n}) => {\r\n  const [foodProducts, setFoodProducts] = useState([\r\n    { foodProductId: 1, foodProductName: \"fp\" },\r\n  ]);\r\n  const [foodProductId, setFoodProductId] = useState(0);\r\n  const [values, setValues] = useState({\r\n    note: \"\",\r\n    value: \"\",\r\n  });\r\n  const [unit, setUnit] = useState(\"NotAssigned\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"food products fetch\");\r\n    fetch(configData.SERVER_URL + \"/api/foodProducts\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        const items = json.map((item, index) => ({\r\n          foodProductId: item.foodProductId,\r\n          foodProductName: item.foodProductName,\r\n        }));\r\n        setFoodProducts(items);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  const handleNumberChange = (e) => {\r\n    const re = /^[0-9\\b]+$/;\r\n    if (e.target.value === \"\" || re.test(e.target.value)) {\r\n      const { name, value } = e.target;\r\n      setValues({ ...values, [name]: value });\r\n    }\r\n  };\r\n\r\n  const onSelectChange = (event, val) => {\r\n    if (val != undefined && val != null) setFoodProductId(val.foodProductId);\r\n  };\r\n\r\n  const refreshForm = () => {\r\n    setValues({\r\n      note: \"\",\r\n      unit: \"\",\r\n      value: \"\",\r\n    });\r\n    setFoodProductId(0);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    const obj = {\r\n      userId: selectedUserId,\r\n      fridgeItem: {\r\n        foodProductId: foodProductId,\r\n        value: parseInt(values.value),\r\n        note: \"\",\r\n        unit: unit,\r\n      },\r\n    };\r\n\r\n    fetch(configData.SERVER_URL + \"/api/fridgeItems/\" + fridgeId + \"/add\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(obj),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          toast.error(\"Cant add fridge item!\", {\r\n            position: \"bottom-center\",\r\n            autoClose: 1500,\r\n          });\r\n          throw Error(response.statusText);\r\n        }\r\n        toast.success(\"Added new fridge item!\", {\r\n          position: \"bottom-center\",\r\n          autoClose: 1500,\r\n        });\r\n\r\n        return response;\r\n      })\r\n      .then(refreshForm())\r\n      .then(() => handleClose())\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ToastContainer />\r\n\r\n      <Dialog\r\n        open={state}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Fridge item</DialogTitle>\r\n        <DialogContent>\r\n          <Autocomplete\r\n            id=\"foodproducts-combobox\"\r\n            options={foodProducts}\r\n            getOptionLabel={(option) => option.foodProductName}\r\n            style={{ width: \"100%\" }}\r\n            onChange={onSelectChange}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Select food product\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <br />\r\n          <TextField\r\n            name=\"value\"\r\n            label=\"Value\"\r\n            fullWidth\r\n            onChange={handleNumberChange}\r\n            value={values.value}\r\n          />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <ToggleButtonGroup\r\n            value={unit}\r\n            exclusive\r\n            onChange={(event, unit) => {\r\n              setUnit(unit);\r\n            }}\r\n            aria-label=\"text alignment\"\r\n          >\r\n            <ToggleButton value=\"Grams\" aria-label=\"left aligned\">\r\n              <Typography variant=\"body1\">Grams</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value=\"Pieces\" aria-label=\"centered\">\r\n              <Typography>Pieces</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value=\"Mililiter\" aria-label=\"right aligned\">\r\n              <Typography>Mililiter</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value=\"NotAssigned\" aria-label=\"justified\">\r\n              <Typography>None</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n          <br />\r\n          <br />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            startIcon={<CloseIcon />}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleAdd}\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            variant=\"outlined\"\r\n          >\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewFridgeItemDialog;\r\n","import React, { useEffect } from \"react\";\r\nimport { Card, makeStyles } from \"@material-ui/core\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\n\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  card: {\r\n    borderRadius: 5,\r\n    padding: \"75px 50px\",\r\n    margin: \"0px 25px\",\r\n    width: \"500px\",\r\n    boxShadow: \"20px 20px 20px black\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function CarouselSlide(props) {\r\n  const { recipe } = props.content;\r\n  const classes = useStyles();\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"recipe\");\r\n  //   console.log(recipe.foodProducts);\r\n  // }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <List component=\"nav\" aria-label=\"secondary\">\r\n        {recipe.foodProducts.map((fp) => {\r\n          return (\r\n            <ListItem key={fp.foodProductId}>\r\n              <ListItemIcon>\r\n                <DoneIcon fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <ListItemText>\r\n                {\" \"}\r\n                {fp.foodProductName}{\" \"}\r\n                <span style={{ color: \"#345131\", paddingLeft: 10 }}>\r\n                  {fp.amountValue.value} {fp.amountValue.unit}\r\n                </span>\r\n              </ListItemText>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n      {/* <DialogContentText>{recipe.description}</DialogContentText> */}\r\n      {/* <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Paper className={classes.paper}>xs=12 sm=6</Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Paper className={classes.paper}>xs=12 sm=6</Paper>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n          </Grid>{\" \"}\r\n          <Grid item xs={12}>\r\n            <h1>{recipe.description}</h1>\r\n          </Grid>\r\n        </Grid>\r\n      </div> */}\r\n      {/* <Card className={classes.card}>\r\n        <p>{recipe.levelOfDifficulty}</p>\r\n        <p>{recipe.requiredTime}</p>\r\n      </Card> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, makeStyles } from \"@material-ui/core\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport configData from \"../../config_url.json\";\r\n\r\nimport CarouselSlide from \"../CarouselSlide\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Arrow(props) {\r\n  const { direction, clickFunction } = props;\r\n  const icon =\r\n    direction === \"left\" ? (\r\n      <ChevronLeftIcon style={{ fontSize: \"5em\" }} />\r\n    ) : (\r\n      <ChevronRightIcon style={{ fontSize: \"5em\" }} />\r\n    );\r\n\r\n  return <div onClick={clickFunction}>{icon}</div>;\r\n}\r\n\r\nconst CarouselDialog = ({ state, handleClose, recipes, userId, fridgeId }) => {\r\n  const [index, setIndex] = React.useState(0);\r\n  const recipeContent = recipes[index];\r\n  const numSlides = recipes.length;\r\n\r\n  const onArrowClick = (direction) => {\r\n    console.log(recipeContent);\r\n    console.log(direction);\r\n    const increment = direction === \"left\" ? -1 : 1;\r\n    const newIndex = (index + increment + numSlides) % numSlides;\r\n    setIndex(newIndex);\r\n  };\r\n\r\n  const handleUseThisRecipe = () => {\r\n    const obj = {\r\n      userId: userId,\r\n      fridgeId: fridgeId,\r\n      foodProducts: recipeContent.foodProducts,\r\n    };\r\n\r\n    console.log(obj);\r\n\r\n    fetch(configData.SERVER_URL + \"/api/fridgeItems/ConsumeRecipe\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(obj),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          toast.error(\"Cant consume this recipe!\", {\r\n            position: \"bottom-center\",\r\n            autoClose: 1500,\r\n          });\r\n          throw Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        handleClose();\r\n      })\r\n      .catch((error) => console.log(error));\r\n    console.log(\"Recipe used by\" + userId);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ToastContainer />\r\n\r\n      <Dialog\r\n        // maxWidth=\"lg\"\r\n        // fullWidth\r\n        open={state}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <Grid container spacing={3}>\r\n          <Grid item>\r\n            {recipes.length > 1 ? (\r\n              <Arrow\r\n                direction=\"left\"\r\n                clickFunction={() => onArrowClick(\"left\")}\r\n              />\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs>\r\n                <h1>{recipeContent.name}</h1>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs>\r\n                <CarouselSlide content={{ recipe: recipeContent }} />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs>\r\n                {recipeContent.description}\r\n              </Grid>\r\n            </Grid>\r\n            {/* <Grid container spacing={3}>\r\n              <Grid item xs>\r\n               \r\n              </Grid>\r\n            </Grid> */}\r\n          </Grid>\r\n          <Grid item>\r\n            {recipes.length > 1 ? (\r\n              <Arrow\r\n                direction=\"right\"\r\n                clickFunction={() => onArrowClick(\"right\")}\r\n              />\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Grid container spacing={3}>\r\n          <Grid item xs> */}\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            startIcon={<CloseIcon />}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            variant=\"outlined\"\r\n            onClick={handleUseThisRecipe}\r\n          >\r\n            Use this recipe\r\n          </Button>\r\n        </DialogActions>\r\n        {/* </Grid>\r\n        </Grid> */}\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CarouselDialog;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport configData from \"../config_url.json\";\r\nimport { MDBDataTable, MDBInput } from \"mdbreact\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport NumericInput from \"react-numeric-input\";\r\nimport NewUserDialog from \"../components/dialogs/NewUserDialog\";\r\nimport NewFridgeItemDialog from \"../components/dialogs/NewFridgeItemDialog\";\r\nimport CarouselDialog from \"../components/dialogs/CarouselDialog\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst FridgeItemsDashboard = () => {\r\n  const { fridgeId } = useParams();\r\n  // const [readOnly, setReadOnly] = useState(true);\r\n  const [dummyState, rerender] = useState(1);\r\n  const [newUserDialogState, setNewUserDialogState] = useState(false);\r\n  const [newFridgeItemDialogState, setNewFridgeItemDialogState] = useState(\r\n    false\r\n  );\r\n  const amount = useRef(0);\r\n  const [usersLoading, finishUsersLoading] = useState(true);\r\n  const [fridgeItemsLoading, finishFridgeItemsLoading] = useState(true);\r\n  const [fridgeUsers, setUsersData] = useState([]);\r\n  const [selectedUserId, selectUser] = useState(\"All\");\r\n\r\n  const [carouselDialogState, setCarouselDialogState] = useState(false);\r\n  const [recipesFound, setRecipesFound] = useState([{}]);\r\n\r\n  const handleCloseCarouselDialog = () => {\r\n    setCarouselDialogState(false);\r\n  };\r\n\r\n  const [selectedItems, selectItem] = useState([]);\r\n\r\n  const checkHandler = (id) => {\r\n    console.log(id);\r\n    const arr = selectedItems;\r\n    if (arr.includes(id)) {\r\n      arr.splice(arr.indexOf(id), 1);\r\n      selectItem(arr);\r\n    } else {\r\n      arr.push(id);\r\n      selectItem(arr);\r\n    }\r\n  };\r\n\r\n  const [rows, setRows] = useState([\r\n    {\r\n      check: <MDBInput type=\"checkbox\" />,\r\n      id: 1,\r\n      categoryName: \"category\",\r\n      productName: \"product\",\r\n      value: 10,\r\n      unit: \"unit\",\r\n      consume: (\r\n        <span>\r\n          <NumericInput min={0} max={100} />\r\n          <Button\r\n            disabled={true}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<FastfoodIcon />}\r\n          >\r\n            Consume\r\n          </Button>\r\n        </span>\r\n      ),\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    let endpoint = \"\";\r\n    let readOnly = false;\r\n    if (selectedUserId !== \"None\") {\r\n      if (selectedUserId === \"All\") {\r\n        endpoint = \"/api/fridgeItems/\" + fridgeId;\r\n        readOnly = true;\r\n      } else {\r\n        readOnly = false;\r\n        endpoint = \"/api/fridgeItems/\" + fridgeId + \"/\" + selectedUserId;\r\n      }\r\n      fetch(configData.SERVER_URL + endpoint)\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          const rowsArray = json.map((item, index) => ({\r\n            check: (\r\n              <MDBInput\r\n                label=\" \"\r\n                disabled={readOnly}\r\n                type=\"checkbox\"\r\n                id={`checkbox${index}`}\r\n                onClick={() => checkHandler(item.foodProductId)}\r\n              />\r\n            ),\r\n            id: index + 1,\r\n            productName: item.productName,\r\n            categoryName: item.categoryName,\r\n            value: item.value,\r\n            unit: item.unit,\r\n            consume: (\r\n              <span>\r\n                <NumericInput\r\n                  disabled={readOnly}\r\n                  min={0}\r\n                  max={10000}\r\n                  value={amount.curent}\r\n                  onChange={handleChange}\r\n                />\r\n                <Button\r\n                  disabled={readOnly}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  startIcon={<FastfoodIcon />}\r\n                  onClick={() => handleConsume(item.fridgeItemId, item.unit)}\r\n                >\r\n                  Consume\r\n                </Button>\r\n              </span>\r\n            ),\r\n          }));\r\n\r\n          setRows(rowsArray);\r\n        })\r\n        .catch((error) => console.error(error))\r\n        .finally(() => finishFridgeItemsLoading(false));\r\n    }\r\n  }, [selectedUserId, dummyState]);\r\n\r\n  useEffect(() => {\r\n    fetch(configData.SERVER_URL + \"/api/fridgeUsers/\" + fridgeId)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        setUsersData([\r\n          { id: \"All\", name: \"All (read-only)\" },\r\n          ...json,\r\n          // { id: \"All\", name: \"All\" },\r\n        ]);\r\n      })\r\n      .catch((error) => console.error(error))\r\n      .finally(() => finishUsersLoading(false));\r\n  }, [dummyState]);\r\n\r\n  const handleChange = (e) => {\r\n    const re = /^[0-9\\b]+$/;\r\n    if (e === \"\" || re.test(e)) {\r\n      amount.current = e;\r\n    } else {\r\n      amount.current = 0;\r\n    }\r\n  };\r\n  const handleConsume = (fridgeItemId, unit) => {\r\n    console.log(amount.current);\r\n    if (amount.current < 1) {\r\n      toast.error(\"Invalid amount!\", {\r\n        position: \"bottom-center\",\r\n        autoClose: 1500,\r\n      });\r\n      return;\r\n    }\r\n    const obj = {\r\n      fridgeItemId: fridgeItemId,\r\n      userId: selectedUserId,\r\n      amountValue: {\r\n        value: amount.current,\r\n        unit: unit,\r\n      },\r\n    };\r\n\r\n    fetch(configData.SERVER_URL + \"/api/fridgeItems/\" + fridgeId + \"/consume\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(obj),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          toast.error(\"Cant consume fridge item!\", {\r\n            position: \"bottom-center\",\r\n            autoClose: 1500,\r\n          });\r\n          throw Error(response.statusText);\r\n        }\r\n        toast.success(\"Consumed!\", {\r\n          position: \"bottom-center\",\r\n          autoClose: 1500,\r\n        });\r\n        amount.current = 0;\r\n        rerender(dummyState + 1);\r\n        return response;\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleFindRecipes = () => {\r\n    console.log(selectedItems);\r\n    console.log(selectedUserId);\r\n    const obj = {\r\n      foodProducts: selectedItems,\r\n    };\r\n\r\n    fetch(configData.SERVER_URL + \"/api/recipes/find\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(obj),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          toast.error(\"Cant find recipe!\", {\r\n            position: \"bottom-center\",\r\n            autoClose: 1500,\r\n          });\r\n          throw Error(response.statusText);\r\n        }\r\n        return response;\r\n      })\r\n      .then((response) => response.json())\r\n      .then((body) => {\r\n        console.log(body.length);\r\n        if (body.length > 0) {\r\n          //const arr = [\"siema\", \"siema2\", \"siema3\"];\r\n          console.log(body);\r\n          setRecipesFound(body);\r\n          setCarouselDialogState(true);\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <NewUserDialog\r\n        fridgeId={fridgeId}\r\n        state={newUserDialogState}\r\n        handleClose={() => {\r\n          setNewUserDialogState(false);\r\n        }}\r\n      />\r\n      <NewFridgeItemDialog\r\n        fridgeId={fridgeId}\r\n        selectedUserId={selectedUserId}\r\n        state={newFridgeItemDialogState}\r\n        handleClose={() => {\r\n          setNewFridgeItemDialogState(false);\r\n        }}\r\n      />\r\n      <CarouselDialog\r\n        state={carouselDialogState}\r\n        handleClose={handleCloseCarouselDialog}\r\n        recipes={recipesFound}\r\n        userId={selectedUserId}\r\n        fridgeId={fridgeId}\r\n      />\r\n      {usersLoading ? (\r\n        <div>\r\n          <CircularProgress />\r\n          <p>Loading users</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"btn-group userBtns\">\r\n          {fridgeUsers.map((item) => {\r\n            return (\r\n              <Button\r\n                variant=\"contained\"\r\n                color={selectedUserId === item.id ? \"secondary\" : \"primary\"}\r\n                onClick={() => selectUser(item.id)}\r\n              >\r\n                {item.name}\r\n              </Button>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <div className=\"btn-group userBtns\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => setNewFridgeItemDialogState(true)}\r\n          >\r\n            Add new fridge item\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => setNewUserDialogState(true)}\r\n          >\r\n            Add new user\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={handleFindRecipes}\r\n          >\r\n            Find recipes\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              rerender(dummyState + 1);\r\n            }}\r\n            startIcon={<RefreshIcon />}\r\n          >\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <br />\r\n      <Container fixed>\r\n        {fridgeItemsLoading ? (\r\n          <p>Select user</p>\r\n        ) : (\r\n          <MDBDataTable\r\n            scrollY\r\n            maxHeight=\"58vh\"\r\n            paging={true}\r\n            hover\r\n            entriesOptions={[10, 20, 40, 100]}\r\n            entries={20}\r\n            pagesAmount={8}\r\n            data={{ columns: columns, rows: rows }}\r\n          ></MDBDataTable>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    label: \"Check\",\r\n    field: \"check\",\r\n    sort: \"disabled\",\r\n    // width: 20,\r\n  },\r\n  {\r\n    label: \"#\",\r\n    field: \"id\",\r\n    sort: \"asc\",\r\n    // width: 20,\r\n  },\r\n  {\r\n    label: \"Product\",\r\n    field: \"productName\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"Category\",\r\n    field: \"categoryName\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"Value\",\r\n    field: \"value\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"Unit\",\r\n    field: \"unit\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"#\",\r\n    field: \"consume\",\r\n    sort: \"asc\",\r\n  },\r\n];\r\n\r\nexport default FridgeItemsDashboard;\r\n","import React, { useState } from \"react\";\r\nimport configData from \"../../config_url.json\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst NewFoodProductDialog = ({ categories, state, handleClose }) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n  });\r\n  const [categoryId, setCategory] = useState(0);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const refreshForm = () => {\r\n    setValues({\r\n      name: \"\",\r\n      category: \"\",\r\n    });\r\n  };\r\n\r\n  const onSelectChange = (event, val) => {\r\n    console.log(val);\r\n    if (val != undefined && val != null) setCategory(val.categoryId);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    const obj = {\r\n      name: values.name,\r\n      category: categoryId,\r\n    };\r\n    console.log(sessionStorage.getItem(\"token\"));\r\n    fetch(configData.SERVER_URL + \"/api/foodProducts\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify(obj),\r\n    })\r\n      .then(function (response) {\r\n        if (!response.ok) {\r\n          if (response.status === 401) {\r\n            toast.error(\"Unauthorized operation!\", {\r\n              position: \"bottom-center\",\r\n              autoClose: 1500,\r\n            });\r\n          } else {\r\n            toast.error(\"Cant add food product!\", {\r\n              position: \"bottom-center\",\r\n              autoClose: 1500,\r\n            });\r\n          }\r\n          throw Error(response.statusText);\r\n        }\r\n        toast.success(\"Food product added!\", {\r\n          position: \"bottom-center\",\r\n          autoClose: 1500,\r\n        });\r\n        return response;\r\n      })\r\n      .then(refreshForm())\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n      .then(() => handleClose());\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ToastContainer />\r\n\r\n      <Dialog\r\n        open={state}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add food product</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            fullWidth\r\n            onChange={handleInputChange}\r\n            value={values.name}\r\n          />\r\n          <br />\r\n          <br />\r\n          <Autocomplete\r\n            id=\"categories-combobox\"\r\n            options={categories}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            onChange={onSelectChange}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Select category\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            startIcon={<CloseIcon />}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            variant=\"outlined\"\r\n            onClick={handleAdd}\r\n          >\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewFoodProductDialog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport configData from \"../config_url.json\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport NewFoodProductDialog from \"../components/dialogs/NewFoodProductDialog\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { AuthContext } from \"../App\";\r\n\r\nconst FoodProducts = () => {\r\n  const { state } = React.useContext(AuthContext);\r\n  const [dataLoading, finishLoading] = useState(true);\r\n  const [newFoodProductDialog, setNewFoodProductDialog] = useState(false);\r\n  const [categories, setCategories] = useState({\r\n    name: \"categoryName\",\r\n    categoryId: 1,\r\n  });\r\n\r\n  const [dummyState, rerender] = useState(1);\r\n  const handleRefresh = () => {\r\n    rerender(dummyState + 1);\r\n  };\r\n\r\n  const [rows, setRows] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"foodProducts\",\r\n      category: \"category\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    fetch(configData.SERVER_URL + \"/api/foodproducts\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        const rowsArray = json.map((item, index) => ({\r\n          id: index + 1,\r\n          name: item.foodProductName,\r\n          category: item.foodProductCategory,\r\n        }));\r\n\r\n        setRows(rowsArray);\r\n      })\r\n      .catch((error) => console.error(error))\r\n      .finally(() => finishLoading(false));\r\n\r\n    fetch(configData.SERVER_URL + \"/api/foodproducts/categories\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        const rowsArray = json.map((item) => ({\r\n          name: item.name,\r\n          categoryId: item.categoryId,\r\n        }));\r\n\r\n        setCategories(rowsArray);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, [dummyState]);\r\n\r\n  const handleCloseNewFoodProductDialog = () => {\r\n    setNewFoodProductDialog(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NewFoodProductDialog\r\n        categories={categories}\r\n        state={newFoodProductDialog}\r\n        handleClose={handleCloseNewFoodProductDialog}\r\n      />\r\n      <Container\r\n        fixed\r\n        // style={{\r\n        //   minHeight: \"60vh\",\r\n        //   maxHeight: \"82vh\",\r\n        //   backgroundColor: \"gray\",\r\n        // }}\r\n      >\r\n        <Button\r\n          disabled={!state.isAdmin}\r\n          style={styles.topButton}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => setNewFoodProductDialog(true)}\r\n        >\r\n          Add new food product\r\n        </Button>\r\n        <Button\r\n          style={styles.topButton}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={handleRefresh}\r\n          startIcon={<RefreshIcon />}\r\n        >\r\n          Refresh\r\n        </Button>\r\n        {dataLoading ? (\r\n          <div>\r\n            <CircularProgress />\r\n            <p>Loading food products</p>\r\n          </div>\r\n        ) : (\r\n          <MDBDataTable\r\n            scrollY\r\n            maxHeight=\"62vh\"\r\n            paging={true}\r\n            hover\r\n            entriesOptions={[10, 20, 40, 100]}\r\n            entries={40}\r\n            pagesAmount={8}\r\n            data={{ columns: columns, rows: rows }}\r\n          ></MDBDataTable>\r\n        )}\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    label: \"#\",\r\n    field: \"id\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"Name\",\r\n    field: \"name\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"Category\",\r\n    field: \"category\",\r\n    sort: \"asc\",\r\n  },\r\n];\r\n\r\nconst styles = {\r\n  topButton: {\r\n    paddingTop: \"10px\",\r\n    paddingBottom: \"10px\",\r\n    marginTop: \"30px\",\r\n  },\r\n};\r\n\r\nexport default FoodProducts;\r\n","import React from \"react\";\r\n\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst UnitSelector = ({ unit, handleChangeUnit }) => {\r\n  return (\r\n    <ToggleButtonGroup\r\n      value={unit}\r\n      exclusive\r\n      onChange={(event, unit) => {\r\n        handleChangeUnit(unit);\r\n      }}\r\n      aria-label=\"text alignment\"\r\n    >\r\n      <ToggleButton value=\"Grams\" aria-label=\"left aligned\">\r\n        <Typography variant=\"button\">Grams</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton value=\"Pieces\" aria-label=\"centered\">\r\n        <Typography variant=\"button\">Pieces</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton value=\"Mililiter\" aria-label=\"right aligned\">\r\n        <Typography variant=\"button\">Mililiter</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton value=\"NotAssigned\" aria-label=\"justified\">\r\n        <Typography variant=\"button\">None</Typography>\r\n      </ToggleButton>\r\n    </ToggleButtonGroup>\r\n  );\r\n};\r\n\r\nexport default UnitSelector;\r\n","import React from \"react\";\r\n\r\nimport { Grid, TextField, Button, Checkbox } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport UnitSelector from \"./UnitSelector\";\r\n\r\nconst FoodProductInput = ({ foodProducts, inputList, setInputList }) => {\r\n  const handleChangeUnit = (val, i) => {\r\n    const list = [...inputList];\r\n    list[i].unit = val;\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setInputList([\r\n      ...inputList,\r\n      {\r\n        foodProductId: 0,\r\n        foodProductName: \"\",\r\n        amount: \"\",\r\n        unit: \"\",\r\n        optional: false,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleCheckbox = (val, i) => {\r\n    const list = [...inputList];\r\n    const actualState = list[i].optional;\r\n\r\n    list[i].optional = !actualState;\r\n    setInputList(list);\r\n  };\r\n\r\n  return inputList.map((fp, i) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={styles.root}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={2}>\r\n              <div className=\"btn-box\">\r\n                {inputList.length !== 1 && (\r\n                  <Button\r\n                    color=\"default\"\r\n                    variant=\"contained\"\r\n                    className=\"mr10\"\r\n                    onClick={() => handleRemoveClick(i)}\r\n                  >\r\n                    <RemoveIcon />\r\n                  </Button>\r\n                )}\r\n                {inputList.length - 1 === i && (\r\n                  <Button\r\n                    color=\"default\"\r\n                    variant=\"contained\"\r\n                    onClick={handleAddClick}\r\n                  >\r\n                    <AddIcon />\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <Checkbox\r\n                checked={fp.optional}\r\n                onChange={() => handleCheckbox(fp, i)}\r\n              ></Checkbox>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Autocomplete\r\n                id=\"foodproducts-combobox\"\r\n                options={foodProducts}\r\n                getOptionLabel={(option) => option.foodProductName}\r\n                onChange={(e, val) => {\r\n                  if (val != null) {\r\n                    const list = [...inputList];\r\n                    list[i].foodProductId = val.foodProductId;\r\n                    list[i].foodProductName = val.foodProductName;\r\n                    setInputList(list);\r\n                  }\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Select food product\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <TextField\r\n                name=\"amount\"\r\n                placeholder=\"Enter Amount\"\r\n                value={fp.amount}\r\n                onChange={(e) => handleInputChange(e, i)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <UnitSelector\r\n                unit={inputList[i].unit}\r\n                handleChangeUnit={(e) => handleChangeUnit(e, i)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n};\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    textAlign: \"center\",\r\n  },\r\n};\r\n\r\nexport default FoodProductInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport configData from \"../config_url.json\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Container, Box, Grid, TextField } from \"@material-ui/core\";\r\n\r\nimport FoodProductInput from \"./FoodProductInput\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst AddNewRecipe = () => {\r\n  let history = useHistory();\r\n\r\n  const [recipeName, setRecipeName] = useState(\"\");\r\n  const [recipeDesc, setRecipeDesc] = useState(\"\");\r\n  const [recipeCategory, setRecipeCategory] = useState(\"\");\r\n  const [levelOfDifficulty, setDifficulty] = useState(\"\");\r\n  const [requiredTime, setRequiredTime] = useState(\"\");\r\n\r\n  const [foodProducts, setFoodProducts] = useState([\r\n    { foodProductId: 1, foodProductName: \"fp\" },\r\n  ]);\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      foodProductId: 0,\r\n      foodProductName: \"\",\r\n      amount: \"\",\r\n      unit: \"\",\r\n      optional: false,\r\n    },\r\n  ]);\r\n\r\n  const handleClose = () => {\r\n    history.push(\"/recipes\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(configData.SERVER_URL + \"/api/foodProducts\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        const items = json.map((item, index) => ({\r\n          foodProductId: item.foodProductId,\r\n          foodProductName: item.foodProductName,\r\n        }));\r\n        setFoodProducts(items);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  const refreshForm = () => {\r\n    setRecipeName(\"\");\r\n    setRecipeDesc(\"\");\r\n    setRecipeCategory(\"\");\r\n    setDifficulty(\"\");\r\n    setRequiredTime(\"\");\r\n    setInputList([\r\n      {\r\n        foodProductId: 0,\r\n        foodProductName: \"\",\r\n        amount: \"\",\r\n        unit: \"\",\r\n        optional: false,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    const products = [];\r\n    inputList.map((item) => {\r\n      const newProduct = {\r\n        foodProductId: item.foodProductId,\r\n        amountValue: { value: parseInt(item.amount), unit: item.unit },\r\n        optional: item.optional,\r\n      };\r\n      products.push(newProduct);\r\n      return true;\r\n    });\r\n\r\n    const obj = {\r\n      name: recipeName,\r\n      description: recipeDesc,\r\n      recipeCategory: parseInt(recipeCategory),\r\n      requiredTime: parseInt(requiredTime),\r\n      levelOfDifficulty: parseInt(levelOfDifficulty),\r\n      products: products,\r\n    };\r\n\r\n    console.log(obj);\r\n\r\n    fetch(configData.SERVER_URL + \"/api/recipes/\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(obj),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          toast.error(\"Cant add recipe!\", {\r\n            position: \"bottom-center\",\r\n            autoClose: 1500,\r\n          });\r\n          throw Error(response.statusText);\r\n        }\r\n        toast.success(\"Added new recipe!\", {\r\n          position: \"bottom-center\",\r\n          autoClose: 1500,\r\n        });\r\n\r\n        return response;\r\n      })\r\n      .then(refreshForm())\r\n      .then(() => handleClose())\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ToastContainer />\r\n      <Container fixed style={styles.container}>\r\n        <Typography variant=\"h3\" component=\"h3\" style={styles.header}>\r\n          Add Recipe\r\n        </Typography>\r\n        <FoodProductInput\r\n          foodProducts={foodProducts}\r\n          inputList={inputList}\r\n          setInputList={setInputList}\r\n        />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"recipeName\"\r\n              label=\"Recipe name\"\r\n              fullWidth\r\n              onChange={(e) => {\r\n                setRecipeName(e.target.value);\r\n              }}\r\n              value={recipeName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"requiredTime\"\r\n              label=\"Required time\"\r\n              fullWidth\r\n              onChange={(e) => {\r\n                setRequiredTime(e.target.value);\r\n              }}\r\n              value={requiredTime}\r\n            />\r\n          </Grid>\r\n          <Grid item xd={1} style={styles.diffToggleBtnGrp}>\r\n            <Typography>Difficulty</Typography>\r\n          </Grid>\r\n          <Grid\r\n            style={styles.diffToggleBtnGrp}\r\n            item\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            xs={2}\r\n          >\r\n            <ToggleButtonGroup\r\n              value={levelOfDifficulty}\r\n              exclusive\r\n              onChange={(event, diff) => {\r\n                setDifficulty(diff);\r\n              }}\r\n              aria-label=\"text alignment\"\r\n            >\r\n              <ToggleButton value=\"1\" aria-label=\"left aligned\">\r\n                <Typography style={styles.toggleBtn}>Easy</Typography>\r\n              </ToggleButton>\r\n              <ToggleButton value=\"2\" aria-label=\"centered\">\r\n                <Typography style={styles.toggleBtn}>Medium</Typography>\r\n              </ToggleButton>\r\n              <ToggleButton value=\"3\" aria-label=\"right aligned\">\r\n                <Typography style={styles.toggleBtn}>Hard</Typography>\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </Grid>\r\n          <Grid item xs={9} style={styles.diffToggleBtnGrp}></Grid>\r\n          <Grid item xd={1} style={styles.categoryToggleBtnGrp}>\r\n            <Typography>Category</Typography>\r\n          </Grid>\r\n          <Grid\r\n            style={styles.categoryToggleBtnGrp}\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            item\r\n            xs={2}\r\n          >\r\n            <ToggleButtonGroup\r\n              value={recipeCategory}\r\n              exclusive\r\n              onChange={(event, cat) => {\r\n                setRecipeCategory(cat);\r\n              }}\r\n              aria-label=\"text alignment\"\r\n            >\r\n              <ToggleButton value=\"1\" aria-label=\"centered\">\r\n                <Typography style={styles.toggleBtn}>Breakfast</Typography>\r\n              </ToggleButton>\r\n              <ToggleButton value=\"2\" aria-label=\"left aligned\">\r\n                <Typography style={styles.toggleBtn}>Dinner</Typography>\r\n              </ToggleButton>\r\n              <ToggleButton value=\"3\" aria-label=\"right aligned\">\r\n                <Typography style={styles.toggleBtn}>Supper</Typography>\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </Grid>\r\n          <Grid item xs={9} style={styles.categoryToggleBtnGrp}></Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"recipeDesc\"\r\n              label=\"Description\"\r\n              multiline\r\n              rows={8}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={recipeDesc}\r\n              onChange={(e) => {\r\n                setRecipeDesc(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Box style={styles.bottomButtonsGrp}>\r\n          <Button\r\n            size=\"large\"\r\n            style={styles.bottomBtn}\r\n            onClick={handleClose}\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            startIcon={<CloseIcon />}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            size=\"large\"\r\n            style={styles.bottomBtn}\r\n            onClick={handleAdd}\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            variant=\"outlined\"\r\n          >\r\n            Create\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  header: {\r\n    paddingTop: \"40px\",\r\n    paddingBottom: \"40px\",\r\n  },\r\n  bottomButtonsGrp: {\r\n    paddingTop: \"50px\",\r\n    paddingBottom: \"50px\",\r\n  },\r\n  bottomBtn: {\r\n    marginLeft: \"30px\",\r\n    marginRight: \"30px\",\r\n    minWidth: \"200px\",\r\n    minHeight: \"70px\",\r\n  },\r\n  toggleBtn: {\r\n    color: \"#494949\",\r\n    textAlign: \"center\",\r\n  },\r\n  diffToggleBtnGrp: {\r\n    marginTop: \"20px\",\r\n    marginbottom: \"20px\",\r\n  },\r\n  categoryToggleBtnGrp: {\r\n    marginTop: \"20px\",\r\n    marginBottom: \"30px\",\r\n  },\r\n  container: {\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n};\r\n\r\nexport default AddNewRecipe;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\n\r\nconst RecipeDetails = ({ isDialogOpened, handleClose, recipeDetails }) => {\r\n  const [foodProductsFormatted, setFoodProductsFormatted] = useState([\r\n    {\r\n      foodProductId: \"1\",\r\n      foodProductName: \"fpName1\",\r\n      amountValue: { value: \"1\", unit: \"Grams\" },\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    var jsonObj = JSON.parse(recipeDetails.foodProducts);\r\n    var foodProductsList = jsonObj.ArrayOfFoodProductDetails.FoodProductDetails;\r\n    setFoodProductsFormatted([]);\r\n    for (const [key, value] of Object.entries(foodProductsList)) {\r\n      setFoodProductsFormatted((oldArray) => [\r\n        ...oldArray,\r\n        {\r\n          foodProductId: value.FoodProductId,\r\n          foodProductName: value.FoodProductName,\r\n          amountValue: {\r\n            value: value.AmountValue.Value,\r\n            unit: value.AmountValue.Unit,\r\n          },\r\n        },\r\n      ]);\r\n    }\r\n  }, [recipeDetails]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={isDialogOpened}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          {recipeDetails.recipeName}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n            {foodProductsFormatted.map((foodProduct) => {\r\n              return (\r\n                <ListItem key={foodProduct.foodProductId}>\r\n                  <ListItemIcon>\r\n                    <DoneIcon fontSize=\"small\" />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    {foodProduct.foodProductName}{\" \"}\r\n                    <span style={{ color: \"#345131\", paddingLeft: 10 }}>\r\n                      {foodProduct.amountValue.value}{\" \"}\r\n                      {foodProduct.amountValue.unit}\r\n                    </span>\r\n                  </ListItemText>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n          <br />\r\n          <DialogContentText>\r\n            {recipeDetails.recipeDescription}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            startIcon={<CloseIcon />}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            disabled\r\n            onClick={() => {\r\n              console.log(\"Use this recipe.\");\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n          >\r\n            Use this recipe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RecipeDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport configData from \"../config_url.json\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nimport { AuthContext } from \"../App\";\r\nimport RecipeDetails from \"../components/dialogs/RecipeDetails\";\r\n\r\nconst Recipes = () => {\r\n  const { state } = React.useContext(AuthContext);\r\n  let history = useHistory();\r\n  const [dataLoading, finishLoading] = useState(true);\r\n  const [dummyState, rerender] = useState(1);\r\n  const [recipeDetailsDialogOpened, openDetailsDialog] = useState(false);\r\n\r\n  const [rows, setRows] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"name\",\r\n      category: \"cat\",\r\n      reqTime: \"req\",\r\n      difficulty: \"diff\",\r\n      details: (\r\n        <Button gradient=\"aqua\" size=\"sm\">\r\n          Details\r\n        </Button>\r\n      ),\r\n    },\r\n  ]);\r\n\r\n  const [recipeDetails, setRecipeDetails] = useState({\r\n    recipeName: \"recipe\",\r\n    recipeDescription: \"desc\",\r\n    foodProducts: JSON.stringify({\r\n      ArrayOfFoodProductDetails: {\r\n        FoodProductDetails: [\r\n          {\r\n            FoodProductId: 1,\r\n            FoodProductName: \"fp1\",\r\n            AmountValue: {\r\n              Value: 10,\r\n              Unit: \"Grams\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    }),\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   console.log(recipeDetails.foodProducts);\r\n  // }, [recipeDetails]);\r\n\r\n  const closeDetailsDialog = () => {\r\n    openDetailsDialog(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(configData.SERVER_URL + \"/api/recipes\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        const rowsArray = json.map((item, index) => ({\r\n          id: index + 1,\r\n          name: item.recipeName,\r\n          category: item.recipeCategory,\r\n          reqTime: item.requiredTime,\r\n          difficulty: item.levelOfDifficulty,\r\n          details: (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<VisibilityIcon />}\r\n              onClick={() => {\r\n                setRecipeDetails({\r\n                  recipeName: item.recipeName,\r\n                  recipeDescription: item.description,\r\n                  foodProducts: item.foodProducts,\r\n                });\r\n                openDetailsDialog(true);\r\n              }}\r\n            >\r\n              Details\r\n            </Button>\r\n          ),\r\n        }));\r\n        setRows(rowsArray);\r\n      })\r\n      .catch((error) => console.error(error))\r\n      .finally(() => finishLoading(false));\r\n  }, [dummyState]);\r\n\r\n  return (\r\n    <div>\r\n      <RecipeDetails\r\n        isDialogOpened={recipeDetailsDialogOpened}\r\n        handleClose={closeDetailsDialog}\r\n        recipeDetails={recipeDetails}\r\n      />\r\n      <Container fixed>\r\n        <div className=\"btn-group\">\r\n          <Button\r\n            disabled={!state.isAdmin}\r\n            style={styles.topButton}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => history.push(\"/recipes/add\")}\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add new\r\n          </Button>\r\n          <Button\r\n            style={styles.topButton}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => rerender(dummyState + 1)}\r\n            startIcon={<RefreshIcon />}\r\n          >\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n\r\n        {dataLoading ? (\r\n          <div>\r\n            <CircularProgress />\r\n            <p>Loading recipes</p>\r\n          </div>\r\n        ) : (\r\n          <MDBDataTable\r\n            scrollY\r\n            maxHeight=\"62vh\"\r\n            paging={true}\r\n            hover\r\n            entriesOptions={[5, 10, 20, 30]}\r\n            entries={10}\r\n            pagesAmount={3}\r\n            data={{ columns: columns, rows: rows }}\r\n          ></MDBDataTable>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    label: \"#\",\r\n    field: \"id\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"Name\",\r\n    field: \"name\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"Category\",\r\n    field: \"category\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"Required time\",\r\n    field: \"reqTime\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"Difficulty\",\r\n    field: \"difficulty\",\r\n    sort: \"asc\",\r\n  },\r\n  {\r\n    label: \"#\",\r\n    field: \"details\",\r\n    sort: \"asc\",\r\n  },\r\n];\r\n\r\nconst styles = {\r\n  topButton: {\r\n    paddingTop: \"10px\",\r\n    paddingBottom: \"10px\",\r\n    marginTop: \"30px\",\r\n  },\r\n};\r\n\r\nexport default Recipes;\r\n","import React from \"react\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBIcon,\r\n  MDBDropdown,\r\n  MDBDropdownItem,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n} from \"mdbreact\";\r\n\r\nimport { AuthContext } from \"../App\";\r\n\r\nfunction Header() {\r\n  const { state, dispatch } = React.useContext(AuthContext);\r\n\r\n  const [isOpen, open] = React.useState(false);\r\n  const [actualPath, setActualPath] = React.useState(\"\");\r\n  const toggleCollapse = () => {\r\n    open(!isOpen);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <MDBNavbar color=\"teal darken-2\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n          <strong className=\"white-text\">SmartFridgeApp</strong>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={isOpen} navbar>\r\n          <MDBNavbarNav left>\r\n            <MDBNavItem active={actualPath === \"fridges\"}>\r\n              <MDBNavLink\r\n                to=\"/fridges\"\r\n                onClick={() => setActualPath(\"fridges\")}\r\n              >\r\n                Fridges\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem active={actualPath === \"foodproducts\"}>\r\n              <MDBNavLink\r\n                to=\"/foodProducts\"\r\n                onClick={() => setActualPath(\"foodproducts\")}\r\n              >\r\n                FoodProducts\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem active={actualPath === \"recipes\"}>\r\n              <MDBNavLink\r\n                to=\"/recipes\"\r\n                onClick={() => setActualPath(\"recipes\")}\r\n              >\r\n                Recipes\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem></MDBNavItem>\r\n          </MDBNavbarNav>\r\n          {state.isAdmin ? (\r\n            <MDBNavbarNav right>\r\n              <MDBNavItem>\r\n                <MDBDropdown>\r\n                  <MDBDropdownToggle nav caret>\r\n                    <MDBIcon icon=\"user\" /> Admin\r\n                  </MDBDropdownToggle>\r\n                  <MDBDropdownMenu className=\"dropdown-default\">\r\n                    <MDBDropdownItem\r\n                      href=\"/fridges\"\r\n                      onClick={() =>\r\n                        dispatch({\r\n                          type: \"LOGOUT_ADMIN\",\r\n                        })\r\n                      }\r\n                    >\r\n                      Logout\r\n                    </MDBDropdownItem>\r\n                  </MDBDropdownMenu>\r\n                </MDBDropdown>\r\n              </MDBNavItem>\r\n            </MDBNavbarNav>\r\n          ) : (\r\n            <MDBNavbarNav right>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"/admin\">Login Admin</MDBNavLink>\r\n              </MDBNavItem>\r\n            </MDBNavbarNav>\r\n          )}\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { MDBContainer, MDBFooter, MDBBox } from \"mdbreact\";\r\n\r\nexport default function BottomMenu() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <MDBFooter color=\"teal darken-2\" className=\"font-small pt-2 mt-4\">\r\n        <div className=\"footer-copyright text-center teal darken-2\">\r\n          <MDBContainer style={{ minHeight: \"30px\" }}>\r\n            <span>\r\n              <a href=\"https://www.smartfridgeapp.pl\">\r\n                Smartfridgeapp.pl &copy;{\" \"}\r\n              </a>\r\n              {new Date().getFullYear()}\r\n            </span>\r\n          </MDBContainer>\r\n        </div>\r\n      </MDBFooter>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport configData from \"../config_url.json\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { MDBTypography } from \"mdbreact\";\r\nimport { Container, TextField } from \"@material-ui/core\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport { AuthContext } from \"../App\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst AdminLogin = () => {\r\n  const { dispatch } = React.useContext(AuthContext);\r\n  let history = useHistory();\r\n  const [login, setLogin] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const refreshForm = () => {\r\n    setLogin(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    history.push(\"/fridges\");\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const obj = {\r\n      login: login,\r\n      password: password,\r\n    };\r\n    fetch(configData.SERVER_URL + \"/api/auth\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(obj),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          toast.error(\"Cant login to admin account!\", {\r\n            position: \"bottom-center\",\r\n            autoClose: 1500,\r\n          });\r\n          throw Error(response.statusText);\r\n        }\r\n        toast.success(\"Logged in as admin!\", {\r\n          position: \"bottom-center\",\r\n          autoClose: 1500,\r\n        });\r\n        return response;\r\n      })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: \"LOGIN_ADMIN\",\r\n          payload: data.value,\r\n        });\r\n      })\r\n      .then(refreshForm())\r\n      .then(handleClose())\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ToastContainer />\r\n      <Container style={{ minHeight: \"75vh\", maxWidth: \"50vw\" }}>\r\n        <MDBTypography tag=\"h2\" style={{ marginTop: \"20px\" }}>\r\n          Admin Login:\r\n        </MDBTypography>\r\n        <TextField\r\n          name=\"login\"\r\n          label=\"Login\"\r\n          fullWidth\r\n          onChange={(e) => {\r\n            setLogin(e.target.value);\r\n          }}\r\n          value={login}\r\n        />\r\n        <TextField\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          fullWidth\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n          value={password}\r\n        />\r\n\r\n        <Button\r\n          onClick={handleClose}\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          style={{ marginTop: \"50px\", marginRight: \"10px\" }}\r\n          startIcon={<CloseIcon />}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={handleLogin}\r\n          color=\"primary\"\r\n          style={{ marginTop: \"50px\", marginRight: \"10px\" }}\r\n          startIcon={<AddIcon />}\r\n          variant=\"contained\"\r\n        >\r\n          Login\r\n        </Button>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLogin;\r\n","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport React from \"react\";\r\n\r\nimport FridgesDashboard from \"./pages/FridgesDashboard\";\r\nimport FridgeItemsDashboard from \"./pages/FridgeItemsDashboard\";\r\nimport FoodProducts from \"./pages/FoodProducts\";\r\nimport AddNewRecipe from \"./components/AddNewRecipe\";\r\nimport Recipes from \"./pages/Recipes\";\r\nimport Header from \"./components/Header\";\r\nimport BottomMenu from \"./components/BottomMenu\";\r\nimport AdminLogin from \"./components/AdminLogin\";\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nconst initialState = {\r\n  isAdmin: false,\r\n  token: null,\r\n  loggedInUser: \"\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ADMIN\":\r\n      sessionStorage.setItem(\"token\", action.payload);\r\n      return {\r\n        ...state,\r\n        isAdmin: true,\r\n        token: action.payload,\r\n      };\r\n    case \"LOGOUT_ADMIN\":\r\n      sessionStorage.clear();\r\n      return {\r\n        ...state,\r\n        isAdmin: false,\r\n        token: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n\r\n  React.useEffect(() => {\r\n    const token = sessionStorage.getItem(\"token\") || null;\r\n    if (token) {\r\n      dispatch({\r\n        type: \"LOGIN_ADMIN\",\r\n        payload: sessionStorage.getItem(\"token\"),\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <AuthContext.Provider\r\n          value={{\r\n            state,\r\n            dispatch,\r\n          }}\r\n        >\r\n          <Header />\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/fridges\" />\r\n            </Route>\r\n            <Route path=\"/recipes/add\">\r\n              <AddNewRecipe />\r\n            </Route>\r\n            <Route path=\"/recipes\">\r\n              <Recipes />\r\n            </Route>\r\n            <Route path=\"/admin\">\r\n              <AdminLogin />\r\n            </Route>\r\n            {/* <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n              <Register />\r\n            </Route> */}\r\n            <Route path=\"/fridges\">\r\n              <FridgesDashboard />\r\n            </Route>\r\n            <Route path=\"/foodProducts\">\r\n              <FoodProducts />\r\n            </Route>\r\n            <Route path=\"/fridgeitems/:fridgeId\">\r\n              <FridgeItemsDashboard />\r\n            </Route>\r\n          </Switch>\r\n\r\n          <BottomMenu />\r\n        </AuthContext.Provider>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}